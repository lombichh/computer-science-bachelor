function getServerCalculationAJAX(xhr, state) {
	
}



function requestServerCalculationIframe(theUri,theHolder) {
	theHolder.innerHTML = '<iframe src="' + theUri + '" width="50%" height="50px">Il tuo browser non supporta gli iframe</iframe>';
}



function requestServerCalculationAJAX(uri, xhr, state) {
    
	// impostazione controllo e stato della richiesta
	xhr.onreadystatechange = function() {
		getServerCalculationResult(xhr, state);
		// nota.. anche se la funzione e' assegnata a un campo di theXhr, 
		// dal momento che la funzione e' invocata dall'interprete in modo asincrono
		// dal suo interno devo necessariamente riferire  
		//	theXhr.status
		// chiamando l'oggetto cui appartiene status con il nome 
		// con cui e' noto nella chiusura della funzione
		// e non posso invece utilizzare la notazione
		//	this.status
		// come invece potrei fare se invocassi la funzione in modo sincrono

		// ---------------------------------------------------------------------------

		// designiamo la formattazione della zona dell'output
		theElement.class = "content";
	
		// verifica dello stato
		if ( theXhr.readyState === 2 ) {
		    	theElement.innerHTML = "Richiesta inviata...";
		} // if 2

		else if ( theXhr.readyState === 3 ) {
	    		theElement.innerHTML = "Ricezione della risposta...";
		} // else if 3

		else if ( theXhr.readyState === 4 ) {

			// verifica della risposta da parte del server
			if ( theXhr.status === 200 ) {
				// operazione avvenuta con successo
				theElement.innerHTML = theXhr.responseText;
			} // if 200

			else {
				// errore di caricamento
				theElement.innerHTML = "Impossibile effettuare l'operazione richiesta.<br />";
				theElement.innerHTML += "Errore riscontrato: " + theXhr.statusText;
			} // else (if !200)

		}// else if 4
		// ---------------------------------------------------------------------------
	} // callback function

	// impostazione richiesta asincrona in GET del file specificato
	try {
		theXhr.open("get", theUri, true);
	}
	catch(e) {
		// Exceptions are raised, for instance, when trying to access cross-domain URIs 
		alert(e);
	}

	// invio richiesta
	theXhr.send(null);

}



function requestServerCalculation(uri, state) {
	var xhr = myGetXmlHttpRequest();
	
	if (xhr) requestServerCalculationAJAX(uri, xhr, state);
	else requestServerCalculationIframe(uri, state);

}
